#!/bin/bash

# –ù–∞–∑–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ –ø–æ—Ä—Ç–æ–≤
OLD_CONTAINER="inst-gallery"
NEW_CONTAINER="inst-gallery-new"
IMAGE_NAME="inst-gallery"
IMAGE_TAG="latest"
PORT_OLD=3000
PORT_NEW=3001

echo "üöÆ 1. –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Docker-–æ–±—ä–µ–∫—Ç–æ–≤ (images, volumes, containers)..."
docker system prune -a -f --volumes

echo "üê≥ 2. –°–±–æ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞..."
docker build -t $IMAGE_NAME:$IMAGE_TAG .

echo "üöÄ 3. –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É $PORT_NEW..."
docker run -d --name $NEW_CONTAINER --env-file .env -p $PORT_NEW:3000 $IMAGE_NAME:$IMAGE_TAG

echo "‚è≥ 4. –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç..."
for i in {1..30}; do
  STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:$PORT_NEW)
  echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ $i: HTTP $STATUS"
  if [ "$STATUS" == "200" ]; then
    echo "‚úÖ –ù–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω."
    break
  fi
  sleep 1
done

if [ "$STATUS" != "200" ]; then
  echo "‚ùå –ù–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –û—Ç–∫–∞—Ç."
  docker stop $NEW_CONTAINER && docker rm $NEW_CONTAINER
  exit 1
fi

echo "üõë 5. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ($OLD_CONTAINER)..."
docker stop $OLD_CONTAINER && docker rm $OLD_CONTAINER

echo "üîÅ 6. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏ –∑–∞–ø—É—Å–∫ –ø–æ–¥ —Å—Ç–∞—Ä—ã–º –∏–º–µ–Ω–µ–º –∏ –ø–æ—Ä—Ç–æ–º..."
docker stop $NEW_CONTAINER
docker run -d --name $OLD_CONTAINER --env-file .env -p $PORT_OLD:3000 $IMAGE_NAME:$IMAGE_TAG

echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ –∏ –±–µ–∑ –¥–∞—É–Ω—Ç–∞–π–º–∞!"
